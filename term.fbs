namespace LFL.LTerminal;

enum Protocol : int { SSH=1, Telnet, RFB, LocalShell }
enum TextEncoding : int { UTF8=1, ASCII=2 }
enum EnterMode : int { Normal=1, ControlJ=2 }
enum DeleteMode : int { Normal=1, ControlH=2 }
enum BeepType : int { None=0, Audio=1, Visual=2 }

enum CredentialDBType : int { Null = 0, Table, Keychain }
enum CredentialType : int { Ask = 0, Password, PEM }
struct CredentialRef { db: int; id: int; }
struct Color { r: ubyte; g: ubyte; b: ubyte; a: ubyte; }
table ColorScheme { name: string; data: [Color]; }
table ToolbarItem { key: string; value: string; }
table PortForward { port: int; target: string; target_port: int; }

table Credential {
  type:        CredentialType;
  data:        [ubyte];
  displayname: string;
  gendate:     string;
  gentype:     string;
}

table Identity {
  username:    string;
  credential:  [CredentialRef];
  displayname: string;
}

table Host {
  protocol:         Protocol = SSH;
  hostport:         string;
  username:         string;
  credential:       CredentialRef;
  displayname:      string;
  folder:           string;
  settings_id:      int;
  fingerprint:      [ubyte];
  fingerprint_type: int;
}

table HostSettings {
  agent_forwarding:    bool;
  compression:         bool = true;
  close_on_disconnect: bool = true;
  terminal_type:       string;
  startup_command:     string;
  font_name:           string;
  font_size:           int = 15;
  color_scheme:        string;
  keyboard_theme:      string;
  beep_type:           BeepType     = None;
  text_encoding:       TextEncoding = UTF8;
  enter_mode:          EnterMode    = Normal;
  delete_mode:         DeleteMode   = Normal;
  toolbar_items:       [ToolbarItem];
  local_forward:       [PortForward];
  remote_forward:      [PortForward];
  autocomplete_id:     int;
  prompt_string:       string;
}

table AppSettings {
  version:               int;
  default_host_settings: HostSettings;
  keep_display_on:       bool;
  background_timeout:    int = 180;
  color_schemes:         [ColorScheme];
}

table RecordLog { stamp: ulong; data: [ubyte]; }
